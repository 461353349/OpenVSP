string vec3dString( const vec3d v )
{
    return "(" + v.x() + ", " + v.y() + ", " + v.z() + ")";
}

void main()
{
    string gid = AddGeom( "POD", "" );

    Update();

    int surf_indx = 0;
    double u = 0.12345;
    double w = 0.67890;

    vec3d pnt = CompPnt01( gid, surf_indx, u, w );
    Print( "Point: " + vec3dString( pnt ) );

    vec3d norm = CompNorm01( gid, surf_indx, u, w );
    Print( "Norm: " + vec3dString( norm ) );

    vec3d tanu = CompTanU01( gid, surf_indx, u, w );
    Print( "Tan U: " + vec3dString( tanu ) );

    vec3d tanw = CompTanW01( gid, surf_indx, u, w );
    Print( "Tan W: " + vec3dString( tanw ) );

    double k1, k2, ka, kg;
    CompCurvature01( gid, surf_indx, u, w, k1, k2, ka, kg );
    Print( "Curvature : k1 " + k1 + " k2 " + k2 + " ka " + ka + " kg " + kg );


    double uout, wout;

    int surf_indx_out;

    // Offset point from surface
    pnt = pnt + norm;

    double d = ProjPnt01( gid, surf_indx, pnt, uout, wout );

    Print( "Dist " + d + " u " + uout + " w " + wout );

    d =ProjPnt01I( gid, pnt, surf_indx_out, uout, wout );

    Print( "Dist " + d + " u " + uout + " w " + wout + " surf_index " + surf_indx_out );

    d = ProjPnt01Guess( gid, surf_indx, pnt, u + 0.1, w + 0.1, uout, wout );

    Print( "Dist " + d + " u " + uout + " w " + wout );

    //==== Check For API Errors ====//
    while ( GetNumTotalErrors() > 0 )
    {
        ErrorObj err = PopLastError();
        Print( err.GetErrorString() );
    }

}
